!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("angular2-multiline-ellipsis",["exports","@angular/core","@angular/common"],t):t(e["angular2-multiline-ellipsis"]={},e.ng.core,e.ng.common)}(this,function(e,t,i){"use strict";var n=function(){function e(e,t){this.el=e,this.platformId=t,this.dotChar="â€¦"}return e.prototype.ngAfterViewInit=function(){var e=i.isPlatformBrowser(this.platformId),t=this.el.nativeElement;t.getAttribute("dotdotdot")&&(this.dotChar=t.getAttribute("dotdotdot")),this.textInit=t.innerText.split(" "),e&&this.ellipsisFunc()},e.prototype.ellipsisFunc=function(){var e=this.el.nativeElement,t=JSON.parse(JSON.stringify(this.textInit));for(e.innerText=""+t.join(" ");e.scrollHeight>e.offsetHeight;)t=t.slice(0,-1),e.innerText=""+t.join(" ")+this.dotChar},e.prototype.onResize=function(e){this.ellipsisFunc()},e}();n.decorators=[{type:t.Directive,args:[{selector:"[appEllipsis]"}]}],n.ctorParameters=function(){return[{type:t.ElementRef},{type:undefined,decorators:[{type:t.Inject,args:[t.PLATFORM_ID]}]}]},n.propDecorators={onResize:[{type:t.HostListener,args:["window:resize",["$event"]]}]};var o=function(){};o.decorators=[{type:t.NgModule,args:[{declarations:[n],exports:[n]}]}],e.MultilineEllipsisModule=o,e.MultilineEllipsisDirective=n,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=angular2-multiline-ellipsis.umd.min.js.map
