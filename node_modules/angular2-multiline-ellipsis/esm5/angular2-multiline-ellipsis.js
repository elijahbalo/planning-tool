import { Directive, ElementRef, Inject, PLATFORM_ID, HostListener, NgModule } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';

var MultilineEllipsisDirective = /** @class */ (function () {
    function MultilineEllipsisDirective(el, platformId) {
        this.el = el;
        this.platformId = platformId;
        this.dotChar = 'â€¦';
    }
    MultilineEllipsisDirective.prototype.ngAfterViewInit = function () {
        var isBrowser = isPlatformBrowser(this.platformId);
        var el = this.el.nativeElement;
        if (el.getAttribute('dotdotdot')) {
            this.dotChar = el.getAttribute('dotdotdot');
        }
        this.textInit = el.innerText.split(' ');
        if (isBrowser) {
            this.ellipsisFunc();
        }
    };
    MultilineEllipsisDirective.prototype.ellipsisFunc = function () {
        var el = this.el.nativeElement;
        var text = JSON.parse(JSON.stringify(this.textInit));
        el.innerText = "" + text.join(' ');
        while (el.scrollHeight > el.offsetHeight) {
            text = text.slice(0, -1);
            el.innerText = "" + text.join(' ') + this.dotChar;
        }
    };
    MultilineEllipsisDirective.prototype.onResize = function (event) {
        this.ellipsisFunc();
    };
    return MultilineEllipsisDirective;
}());
MultilineEllipsisDirective.decorators = [
    { type: Directive, args: [{
                selector: '[appEllipsis]'
            },] },
];
MultilineEllipsisDirective.ctorParameters = function () { return [
    { type: ElementRef, },
    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },
]; };
MultilineEllipsisDirective.propDecorators = {
    "onResize": [{ type: HostListener, args: ['window:resize', ['$event'],] },],
};
var MultilineEllipsisModule = /** @class */ (function () {
    function MultilineEllipsisModule() {
    }
    return MultilineEllipsisModule;
}());
MultilineEllipsisModule.decorators = [
    { type: NgModule, args: [{
                declarations: [MultilineEllipsisDirective],
                exports: [MultilineEllipsisDirective]
            },] },
];

export { MultilineEllipsisModule, MultilineEllipsisDirective };
//# sourceMappingURL=angular2-multiline-ellipsis.js.map
